apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: bootstrap
spec:
  entrypoint: bootstrap
  arguments:
    parameters:
    - name: revision
      value: master
    - name: AWS_S3_ENDPOINT
      value: http://minio.minio.svc:9000
    - name: AWS_ACCESS_KEY_ID
    - name: AWS_SECRET_ACCESS_KEY
    - name: VAULT_TOKEN
    - name: VAULT_ADDR
      value: http://vault.vault.svc:8200
    - name: VAULT_SKIP_VERIFY
      value: "true"
  templates:  
  - name: bootstrap
    inputs:
      parameters:
      - name: AWS_S3_ENDPOINT
      - name: AWS_ACCESS_KEY_ID
      - name: AWS_SECRET_ACCESS_KEY
      - name: VAULT_TOKEN
      - name: VAULT_ADDR
      - name: VAULT_SKIP_VERIFY
      - name: revision
      artifacts:
      - name: argo-source
        path: "/vault"
        git:
          repo: "https://github.com/nolte/terragrunt-collection.git"
          revision: "{{inputs.parameters.revision}}"
    container:
      image: alpine/terragrunt
      command: [sh, -c]
      args: ["env && terragrunt apply -input=false -auto-approve -no-color -compact-warnings && terragrunt output -json"]
      workingDir: "/vault/vault"
      env:
        - name: AWS_S3_ENDPOINT
          value: "{{inputs.parameters.AWS_S3_ENDPOINT}}"
        - name: AWS_ACCESS_KEY_ID
          value: "{{inputs.parameters.AWS_ACCESS_KEY_ID}}"
        - name: AWS_SECRET_ACCESS_KEY
          value: "{{inputs.parameters.AWS_SECRET_ACCESS_KEY}}"
        - name: VAULT_TOKEN
          value: "{{inputs.parameters.VAULT_TOKEN}}"
        - name: VAULT_ADDR
          value: "{{inputs.parameters.VAULT_ADDR}}"
        - name: VAULT_SKIP_VERIFY
          value: "{{inputs.parameters.VAULT_SKIP_VERIFY}}"      