# This example demonstrates the use of a git repo as a hard-wired input artifact.
# The argo repo is cloned to its target destination at '/src' for the main container to consume.
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: minio
spec:
  entrypoint: install
  inputs:
    parameters:
    - name: destName
    - name: appRevision
    - name: rootAccessKey
    - name: rootSecretKey
  templates:  
    - name: install
      inputs:
        parameters:
        - name: destName
        - name: appRevision
        - name: rootAccessKey
        - name: rootSecretKey
      steps:
      - - name: mini
          arguments:
            parameters:
              - name: appName
                value: "seed-minio"
              - name: appPath
                value: "charts/argocd-minio/"
              - name: "releaseName"
                value: "minio"
              - name: "destName"
                value: "{{inputs.parameters.destName}}"
              - name: "appRevision"
                value: "{{inputs.parameters.appRevision}}"
              - name: appRepo
                value: "https://github.com/nolte/argo-charts.git"
              - name: appNamespace 
                value: minio
              - name: "appCreateExtraArgs"
                value: "--helm-set accessKey={{inputs.parameters.rootAccessKey}} --helm-set secretKey={{inputs.parameters.rootSecretKey}}"
          templateRef:
             name: app-create
             template: install  
